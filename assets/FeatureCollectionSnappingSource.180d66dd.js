import{y as n,r as s,k as o,n as i,o as c}from"./vendor.5fba8a95.js";import{o as l}from"./queryEngineUtils.98eb399d.js";import"./DimensioningAnalysisView3D.1eb9ebf5.js";import"./LineVisualElement.8af1b303.js";import"./analysisViewUtils.345c61f0.js";import"./PointVisualElement.e92c9b0a.js";import"./RightAngleQuadVisualElement.488ae926.js";import"./Segment.eecc2c2e.js";import"./elevationInfoUtils.025015e4.js";import"./dragEventPipeline3D.5beb9fb3.js";import"./EditGeometryOperations.943c907a.js";import"./QueryEngineResult.b127d9f3.js";import"./WhereClause.7b12305d.js";import"./utils.6eccf1e5.js";import"./ClassBreaksDefinition.413c77e2.js";import"./json.d1a0fa35.js";let e=class extends n{constructor(t){super(t)}get availability(){return 1}refresh(){}async fetchCandidates(t,a){const r=this.layerSource.layer.source;return r.querySnapping?(await r.querySnapping({distance:t.distance,point:t.coordinateHelper.vectorToPoint(t.point).toJSON(),types:t.types,query:s(t.filter)?t.filter.createQuery().toJSON():{where:"1=1"}},{signal:a})).candidates.map(p=>l(p,t.coordinateHelper,t.elevationInfo)):[]}};o([i({constructOnly:!0})],e.prototype,"layerSource",void 0),o([i({readOnly:!0})],e.prototype,"availability",null),e=o([c("esri.views.interactive.snapping.featureSources.FeatureCollectionSnappingSource")],e);export{e as FeatureCollectionSnappingSource};
