var E=Object.defineProperty,M=Object.defineProperties;var j=Object.getOwnPropertyDescriptors;var S=Object.getOwnPropertySymbols;var P=Object.prototype.hasOwnProperty,L=Object.prototype.propertyIsEnumerable;var x=(e,t,r)=>t in e?E(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,p=(e,t)=>{for(var r in t||(t={}))P.call(t,r)&&x(e,r,t[r]);if(S)for(var r of S(t))L.call(t,r)&&x(e,r,t[r]);return e},m=(e,t)=>M(e,j(t));import{ri as T,rK as $,rj as F,cC as N,cD as R,cE as q,cF as J,rq as U,ru as A,rI as k,cP as V,V as _,r as z,cI as C,sh as w,si as v,sj as I,jp as D,jf as H,aP as O,bH as b,O as K,aA as G,cf as W,ro as B,r_ as X,k as i,n,cM as Q,jl as Y,ff as Z,cL as ee,o as te}from"./vendor.5fba8a95.js";import{E as re,y as se,X as ae}from"./SublayersOwner.2a6fcc78.js";let a=class extends T($(F(re(se(N(R(q(J(U(A(k(V(_))))))))))))){constructor(...e){super(...e),this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,t){return typeof e=="string"?p({url:e},t):e}load(e){const t=z(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(C).then(()=>this._fetchService(t))),Promise.resolve(this)}readImageFormat(e,t){const r=t.supportedImageFormatTypes;return r&&r.includes("PNG32")?"png32":"png24"}writeSublayers(e,t,r,s){if(!this.loaded||!e)return;const c=e.slice().reverse().flatten(({sublayers:o})=>o&&o.toArray().reverse()).toArray();let l=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const o=w(s.origin);if(o===v.PORTAL_ITEM){const h=this.createSublayersForOrigin("service").sublayers;l=I(c,h,v.SERVICE)}else if(o>v.PORTAL_ITEM){const h=this.createSublayersForOrigin("portal-item");l=I(c,h.sublayers,w(h.origin))}}const y=[],u=p({writeSublayerStructure:l},s);let d=l;c.forEach(o=>{const h=o.write({},u);y.push(h),d=d||o.originOf("visible")==="user"}),y.some(o=>Object.keys(o).length>1)&&(t.layers=y),d&&(t.visibleLayers=c.filter(o=>o.visible).map(o=>o.id))}createExportImageParameters(e,t,r,s){const c=s&&s.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const l=new D({layer:this,floors:s==null?void 0:s.floors,scale:H({extent:e,width:t})*c}),y=l.toJSON();l.destroy();const u=!s||!s.rotation||this.version<10.3?{}:{rotation:-s.rotation},d=e&&e.spatialReference,o=d.wkid||JSON.stringify(d.toJSON());y.dpi*=c;const h={};if(s==null?void 0:s.timeExtent){const{start:g,end:f}=s.timeExtent.toJSON();h.time=g&&f&&g===f?""+g:`${g==null?"null":g},${f==null?"null":f}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(h.time="null,null");return p(p(p({bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:o,imageSR:o,size:t+","+r},y),u),h)}async fetchImage(e,t,r,s){var y;const c={responseType:"image",signal:(y=s==null?void 0:s.signal)!=null?y:null,query:m(p(p(m(p(p({},this.parsedUrl.query),this.createExportImageParameters(e,t,r,s)),{f:"image"}),this.refreshParameters),this.customParameters),{token:this.apiKey})},l=this.parsedUrl.path+"/export";if(c.query.dynamicLayers!=null&&!this.capabilities.exportMap.supportsDynamicLayers)throw new O("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:c.query});return b(l,c).then(u=>u.data).catch(u=>{throw K(u)?u:new O("mapimagelayer:image-fetch-error",`Unable to load image: ${l}`,{error:u})})}async fetchRecomputedExtents(e={}){const t=m(p({},e),{query:m(p({returnUpdates:!0,f:"json"},this.customParameters),{token:this.apiKey})}),{data:r}=await b(this.url,t),{extent:s,fullExtent:c,timeExtent:l}=r,y=s||c;return{fullExtent:y&&G.fromJSON(y),timeExtent:l&&W.fromJSON({start:l[0],end:l[1]})}}loadAll(){return B(this,e=>{e(this.allSublayers)})}serviceSupportsSpatialReference(e){return X(this,e)}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:r}=await b(this.parsedUrl.path,{query:m(p(p({f:"json"},this.parsedUrl.query),this.customParameters),{token:this.apiKey}),signal:e});r&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}};i([n({type:Boolean})],a.prototype,"datesInUnknownTimezone",void 0),i([n()],a.prototype,"dpi",void 0),i([n()],a.prototype,"gdbVersion",void 0),i([n()],a.prototype,"imageFormat",void 0),i([Q("imageFormat",["supportedImageFormatTypes"])],a.prototype,"readImageFormat",null),i([n({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],a.prototype,"imageMaxHeight",void 0),i([n({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],a.prototype,"imageMaxWidth",void 0),i([n()],a.prototype,"imageTransparency",void 0),i([n({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],a.prototype,"isReference",void 0),i([n({json:{read:!1,write:!1}})],a.prototype,"labelsVisible",void 0),i([n({type:["ArcGISMapServiceLayer"]})],a.prototype,"operationalLayerType",void 0),i([n({json:{read:!1,write:!1}})],a.prototype,"popupEnabled",void 0),i([n()],a.prototype,"sourceJSON",void 0),i([n({json:{write:{ignoreOrigin:!0}}})],a.prototype,"sublayers",void 0),i([Y("sublayers",{layers:{type:[ae]},visibleLayers:{type:[Z]}})],a.prototype,"writeSublayers",null),i([n({type:["show","hide","hide-children"]})],a.prototype,"listMode",void 0),i([n({json:{read:!1},readOnly:!0,value:"map-image"})],a.prototype,"type",void 0),i([n(ee)],a.prototype,"url",void 0),a=i([te("esri.layers.MapImageLayer")],a);const le=a;export{le as default};
