import{i_ as m,hO as g,p8 as y,p9 as w,pa as I,hr as d,C as h}from"./vendor.5fba8a95.js";class b{constructor(){this.code=null,this.description=null}}class q{constructor(t){this.error=new b,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=t}}function f(e){return new q(e)}class v{constructor(t){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=t}}function P(e){return new v(e)}const a=new Set;function S(e,t,n,p=!1,u){a.clear();for(const r in n){const i=e.get(r);if(!i)continue;const l=n[r],s=j(i,l);if(s!==l&&u&&u.push({name:"invalid-value-type",message:"attribute value was converted to match the field type",details:{field:i,originalValue:l,sanitizedValue:s}}),a.add(i.name),i&&(p||i.editable)){const c=w(i,s);if(c)return f(I(c,i,s));t[i.name]=s}}for(const r of e.requiredFields)if(!a.has(r.name))return f(`missing required field "${r.name}"`);return null}function j(e,t){let n=t;return typeof t=="string"&&m(e)?n=parseFloat(t):t!=null&&g(e)&&typeof t!="string"&&(n=String(t)),y(n)}let o;function V(e,t){if(!e||!d(t))return e;if("rings"in e||"paths"in e){if(h(o))throw new TypeError("geometry engine not loaded");return o.simplify(t,e)}return e}async function F(){return h(o)&&(o=await import("./geometryEngineJSON.2762c1dd.js")),o}async function x(e,t){!d(e)||t!=="esriGeometryPolygon"&&t!=="esriGeometryPolyline"||await F()}export{f as a,P as f,V as g,S as m,x as w};
