var d=Object.defineProperty;var p=Object.getOwnPropertySymbols;var h=Object.prototype.hasOwnProperty,S=Object.prototype.propertyIsEnumerable;var c=(e,t,o)=>t in e?d(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,u=(e,t)=>{for(var o in t||(t={}))h.call(t,o)&&c(e,o,t[o]);if(p)for(var o of p(t))S.call(t,o)&&c(e,o,t[o]);return e};import{rc as m,rk as v,cv as g,cw as f,rd as b,cx as w,M as C,co as G,r as x,cA as _,bz as k,rv as P,ow as R,e as s,d as i,cE as F,aw as E,rw as M,rx as $,cD as j,n as L,hZ as n,ry as A,rz as D,rA as O,g as T}from"./vendor.4451b4ce.js";const z=["atom","xml"],U={base:n,key:"type",typeMap:{"simple-line":A},errorContext:"symbol"},q={base:n,key:"type",typeMap:{"picture-marker":D,"simple-marker":O},errorContext:"symbol"},I={base:n,key:"type",typeMap:{"simple-fill":T},errorContext:"symbol"};let r=class extends m(v(g(f(b(w(C)))))){constructor(...e){super(...e),this.description=null,this.fullExtent=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,t){return typeof e=="string"?u({url:e},t):e}readFeatureCollections(e,t){return t.featureCollection.layers.forEach(o=>{var a;const l=o.layerDefinition.drawingInfo.renderer.symbol;l&&l.type==="esriSFS"&&((a=l.outline)==null?void 0:a.style.includes("esriSFS"))&&(l.outline.style="esriSLSSolid")}),t.featureCollection.layers}get hasPoints(){return this._hasGeometry("esriGeometryPoint")}get hasPolylines(){return this._hasGeometry("esriGeometryPolyline")}get hasPolygons(){return this._hasGeometry("esriGeometryPolygon")}get title(){const e=this._get("title");return e&&this.originOf("title")!=="defaults"?e:this.url?G(this.url,z)||"GeoRSS":e||""}set title(e){this._set("title",e)}load(e){const t=x(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).catch(_).then(()=>this._fetchService(t)).then(o=>{this.read(o,{origin:"service"})})),Promise.resolve(this)}async hasDataChanged(){const e=await this._fetchService();return this.read(e,{origin:"service",ignoreDefaults:!0}),!0}async _fetchService(e){var l;const t=this.spatialReference,{data:o}=await k(R.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:P(t)?void 0:(l=t.wkid)!=null?l:JSON.stringify(t)},signal:e});return o}_hasGeometry(e){var t,o;return(o=(t=this.featureCollections)==null?void 0:t.some(l=>{var a,y;return((a=l.featureSet)==null?void 0:a.geometryType)===e&&((y=l.featureSet.features)==null?void 0:y.length)>0}))!=null?o:!1}};s([i()],r.prototype,"description",void 0),s([i()],r.prototype,"featureCollections",void 0),s([F("service","featureCollections",["featureCollection.layers"])],r.prototype,"readFeatureCollections",null),s([i({type:E,json:{name:"lookAtExtent"}})],r.prototype,"fullExtent",void 0),s([i(M)],r.prototype,"id",void 0),s([i($)],r.prototype,"legendEnabled",void 0),s([i({types:U,json:{write:!0}})],r.prototype,"lineSymbol",void 0),s([i({type:["show","hide"]})],r.prototype,"listMode",void 0),s([i({types:q,json:{write:!0}})],r.prototype,"pointSymbol",void 0),s([i({types:I,json:{write:!0}})],r.prototype,"polygonSymbol",void 0),s([i({type:["GeoRSS"]})],r.prototype,"operationalLayerType",void 0),s([i(j)],r.prototype,"url",void 0),s([i({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],r.prototype,"title",null),s([i({readOnly:!0,json:{read:!1},value:"geo-rss"})],r.prototype,"type",void 0),r=s([L("esri.layers.GeoRSSLayer")],r);const Z=r;export{Z as default};
